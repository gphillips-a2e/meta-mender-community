From 150b0d7ffa9e32e37440753678c6dcc7c7ee706d Mon Sep 17 00:00:00 2001
From: Gareth Phillips <gphillips@a2etech.com>
Date: Tue, 10 Nov 2020 14:01:18 +0000
Subject: [PATCH] Switch to CONFIG_DISTRO_DEFAULTS for bootcmd

---
 configs/imx8mn_var_som_defconfig |  2 +
 include/configs/imx8mn_var_som.h | 84 +++++++-------------------------
 2 files changed, 19 insertions(+), 67 deletions(-)

diff --git a/configs/imx8mn_var_som_defconfig b/configs/imx8mn_var_som_defconfig
index ca354a4ed8..96ae23d6aa 100644
--- a/configs/imx8mn_var_som_defconfig
+++ b/configs/imx8mn_var_som_defconfig
@@ -84,3 +84,5 @@ CONFIG_USB_GADGET_VENDOR_NUM=0x0525
 CONFIG_USB_GADGET_PRODUCT_NUM=0xa4a5
 CONFIG_CI_UDC=y
 CONFIG_OF_LIBFDT_OVERLAY=y
+CONFIG_EFI_LOADER=y
+CONFIG_DISTRO_DEFAULTS=y
diff --git a/include/configs/imx8mn_var_som.h b/include/configs/imx8mn_var_som.h
index c554a9da63..0a0d2f5584 100644
--- a/include/configs/imx8mn_var_som.h
+++ b/include/configs/imx8mn_var_som.h
@@ -60,6 +60,7 @@
 
 #define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
 
+#define BOOTENV
 #endif /* CONFIG_SPL_BUILD */
 
 #define CONFIG_CMD_READ
@@ -109,21 +110,18 @@
 /* Initial environment variables */
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	CONFIG_MFG_ENV_SETTINGS \
+        BOOTENV \
 	"bootdir=/boot\0" \
 	"script=boot.scr\0" \
 	"image=Image.gz\0" \
 	"img_addr=0x42000000\0" \
 	"console=ttymxc3,115200 earlycon=ec_imx6q,0x30a60000,115200\0" \
-	"fdt_addr=0x43000000\0" \
+	"fdt_addr_r=0x43000000\0" \
 	"fdt_high=0xffffffffffffffff\0" \
-	"boot_fdt=try\0" \
-	"ip_dyn=yes\0" \
-	"fdt_file=undefined\0" \
+	"fdtfile=undefined\0" \
 	"initrd_addr=0x43800000\0" \
 	"initrd_high=0xffffffffffffffff\0" \
 	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
-	"mmcblk=1\0" \
-	"mmcautodetect=yes\0" \
 	"mmcpart=1\0" \
 	"m7_addr=0x7e0000\0" \
 	"m7_bin=hello_world.bin\0" \
@@ -138,65 +136,19 @@
 			"dcache flush; " \
 		"fi; " \
 		"bootaux ${m7_addr};\0" \
-	"optargs=setenv bootargs ${bootargs} ${kernelargs};\0" \
-	"mmcargs=setenv bootargs console=${console} " \
-		"root=/dev/mmcblk${mmcblk}p${mmcpart} rootwait rw ${cma_size}\0 " \
-	"loadbootscript=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${bootdir}/${script};\0" \
-	"bootscript=echo Running bootscript from mmc ...; " \
-		"source\0" \
-	"loadimage=load mmc ${mmcdev}:${mmcpart} ${img_addr} ${bootdir}/${image};" \
-		"unzip ${img_addr} ${loadaddr}\0" \
 	"findfdt=" \
-		"if test $fdt_file = undefined; then " \
+		"if test $fdtfile = undefined; then " \
 			"if test $som_rev = som_rev10; then " \
-				"setenv fdt_file imx8mn-var-som-rev10.dtb; " \
+				"setenv fdtfile imx8mn-var-som-rev10.dtb; " \
 			"else " \
-				"setenv fdt_file imx8mn-var-som.dtb; " \
+				"setenv fdtfile imx8mn-var-som.dtb; " \
 			"fi;" \
 		"fi; \0" \
-	"loadfdt=run findfdt; " \
-		"echo fdt_file=${fdt_file}; " \
-		"load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${bootdir}/${fdt_file}\0" \
 	"ramsize_check="\
 		"if test $sdram_size -le 512; then " \
 			"setenv cma_size cma=320M; " \
 		"else " \
 			"setenv cma_size cma=640M@1376M; " \
-		"fi;\0" \
-	"mmcboot=echo Booting from mmc ...; " \
-		"run mmcargs; " \
-		"run optargs; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if run loadfdt; then " \
-				"booti ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"else " \
-			"echo wait for boot; " \
-		"fi;\0" \
-	"netargs=setenv bootargs console=${console} " \
-		"root=/dev/nfs ${cma_size} " \
-		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
-	"netboot=echo Booting from net ...; " \
-		"if test ${ip_dyn} = yes; then " \
-			"setenv get_cmd dhcp; " \
-		"else " \
-			"setenv get_cmd tftp; " \
-		"fi; " \
-		"${get_cmd} ${img_addr} ${image}; unzip ${img_addr} ${loadaddr};" \
-		"run netargs; " \
-		"run optargs; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"run findfdt; " \
-			"echo fdt_file=${fdt_file}; " \
-			"if ${get_cmd} ${fdt_addr} ${fdt_file}; then " \
-				"booti ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"else " \
-			"booti; " \
 		"fi;\0"
 
 #define CONFIG_BOOTCOMMAND \
@@ -206,18 +158,11 @@
 		"if test ${use_m7} = yes && run loadm7bin; then " \
 			"run runm7bin; " \
 		"fi; " \
-		"if run loadbootscript; then " \
-			"run bootscript; " \
-		"else "\
-			"if run loadimage; then " \
-				"run mmcboot; " \
-			"else " \
-				"run netboot; " \
-			"fi; " \
-		"fi; " \
-	"else " \
-		"booti ${loadaddr} - ${fdt_addr}; " \
-	"fi;"
+	"fi;" \
+	"setenv bootargs console=${console} ${cma_size} ${kernelargs}; " \
+	"run findfdt; " \
+	"setenv kernel_addr_r ${loadaddr}; " \
+	"run distro_bootcmd;"
 
 /* Link Definitions */
 #define CONFIG_LOADADDR			0x40480000
@@ -234,6 +179,7 @@
 #define CONFIG_ENV_OVERWRITE
 
 /* Default ENV offset is 4MB for SD/EMMC/FSPI, but NAND uses 60MB offset, overridden by env_get_offset */
+#define CONFIG_ENV_SIZE			SZ_8K
 #define CONFIG_ENV_SECT_SIZE		(64 * 1024)
 #define CONFIG_SYS_MMC_ENV_DEV		1 /* USDHC2 */
 
@@ -301,6 +247,10 @@
 #define CONFIG_USB_GADGET_MASS_STORAGE
 #define CONFIG_USB_FUNCTION_MASS_STORAGE
 
+#define BOOT_TARGET_DEVICES(func) \
+        func(MMC, mmc, 2) \
+        func(MMC, mmc, 1)
+#include <config_distro_bootcmd.h>
 #endif
 
 #define CONFIG_USB_GADGET_VBUS_DRAW 2
-- 
2.17.1

